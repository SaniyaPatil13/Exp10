#include <stdio.h>
#include <stdlib.h>

struct Item {
    int weight;
    int value;
};

int compare(const void *a, const void *b) {
    double ratioA = ((double)((struct Item *)a)->value) / ((struct Item *)a)->weight;
    double ratioB = ((double)((struct Item *)b)->value) / ((struct Item *)b)->weight;
    return (ratioB > ratioA) - (ratioA > ratioB);
}

void knapsackGreedy(struct Item items[], int n, int capacity) {
    qsort(items, n, sizeof(struct Item), compare);

    int currentWeight = 0;
    double totalValue = 0.0;

    for (int i = 0; i < n; i++) {
        if (currentWeight + items[i].weight <= capacity) {
            currentWeight += items[i].weight;
            totalValue += items[i].value;
            printf("Added item with weight %d and value %d\n", items[i].weight, items[i].value);
        }
    }

    printf("Total profit earned in the knapsack: %.2lf\n", totalValue);
    printf("Total weight added in the knapsack : %d\n", currentWeight);
}

int main() {
    int nitem, capacity;

    printf("Enter number of items: ");
    scanf("%d", &nitem);

    printf("Enter capacity of knapsack: ");
    scanf("%d", &capacity);

    struct Item items[nitem];

    for (int i = 0; i < nitem; i++) {
        printf("Enter weight of item %d: ", i + 1);
        scanf("%d", &items[i].weight);
        printf("Enter profit of item %d: ", i + 1);
        scanf("%d", &items[i].value);
    }

    printf("\nKnapsack contents:\n");
    knapsackGreedy(items, nitem, capacity);

    return 0;
}
